plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
    id "com.github.johnrengelman.shadow" version "7.1.2"
}


ext {
    versions = [
            opentelemetry              : "1.17.0",


            opentelemetryJavaagentAlpha: "1.17.0-alpha",
    ]

    deps = [
            autoservice: dependencies.create(group: 'com.google.auto.service', name: 'auto-service', version: '1.0.1')
    ]
}

def pyroscopeVersion = project.properties['pyroscope_version']
def otelProfilingVersion = project.properties['otel_profiling_version']
group = "io.pyroscope"
version = otelProfilingVersion

nexusPublishing {
    repositories {
        sonatype {  //only for users registered in Sonatype after 24 Feb 2021
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}


dependencies {
    implementation("io.pyroscope:agent:$pyroscopeVersion")

    compileOnly("io.opentelemetry:opentelemetry-sdk-extension-autoconfigure-spi:${versions.opentelemetry}")
    compileOnly("io.opentelemetry.instrumentation:opentelemetry-instrumentation-api:${versions.opentelemetryJavaagentAlpha}")
    compileOnly("io.opentelemetry.javaagent:opentelemetry-javaagent-extension-api:${versions.opentelemetryJavaagentAlpha}")




}

java {
    withJavadocJar()
    withSourcesJar()
}

jar {
    
}

shadowJar {
    archiveFileName = "pyroscope-otel.jar"
    relocate 'io.pyroscope', 'io.otel.pyroscope.shadow'
    archiveClassifier.set('')
}

publishing {
    publications {
        mavenJava(MavenPublication) { publication ->
            project.shadow.component(publication)
            groupId = 'io.pyroscope'
            artifactId = 'otel'
            version = otelProfilingVersion
            artifacts = [ shadowJar, javadocJar, sourcesJar ]
            pom {
                name = 'Pyroscope OTEL integration'
                description = 'Pyroscope OTEL integration'
                url = 'https://pyroscope.io'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'pyroscope'
                        name = 'Pyroscope'
                        email = 'anatoly@pyroscope.io'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/pyroscope-io/pyroscope-java.git'
                    developerConnection = 'scm:git:ssh://github.com/pyroscope-io/pyroscope-java.git'
                    url = 'https://github.com/pyroscope-io/pyroscope-java'
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username project.hasProperty('nexusUsername') ? project.nexusUsername : ''
                password project.hasProperty('nexusPassword') ? project.nexusPassword : ''
            }
            url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
